/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MainContract,
  MainContractInterface,
} from "../../../contracts/MainContract.sol/MainContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenErc20",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenErc721",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "NFTReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "NFTId",
        type: "uint256",
      },
    ],
    name: "depositNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositOf",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "APRIncrement",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "accumulatedInterest",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "depositTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastInterestTime",
            type: "uint256",
          },
        ],
        internalType: "struct MainContract.Deposit",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositOfNFT",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAPR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getEventInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "user",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct MainContract.DepositTokenInfo",
            name: "depositToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "user",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "NFTId",
                type: "uint256",
              },
            ],
            internalType: "struct MainContract.DepositNFTInfo",
            name: "depositNFT",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "user",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct MainContract.WithdrawERC20Info",
            name: "withdrawERC20",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "user",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "NFTId",
                type: "uint256",
              },
            ],
            internalType: "struct MainContract.WithdrawNFTInfo",
            name: "withdrawNFT",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "user",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct MainContract.ClaimRewardInfo",
            name: "claimReward",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "from",
                type: "address",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct MainContract.TransferERC20Info",
            name: "transferERC20",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "from",
                type: "address",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "NFTId",
                type: "uint256",
              },
            ],
            internalType: "struct MainContract.TransferNFTInfo",
            name: "transferNFT",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "successful",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct MainContract.EventInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "APR",
        type: "uint8",
      },
    ],
    name: "setAPR",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "NFTId",
        type: "uint256",
      },
    ],
    name: "transferNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "updateInterest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "withdrawNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100ea57601f6116e238819003918201601f19168301916001600160401b038311848410176100ef5780849260409485528339810103126100ea57610052602061004b83610105565b9201610105565b906000546040519260018060a01b0391338382167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001600160a81b0319163360ff60a01b191617600160a31b1760ff60a81b1916600160a91b176000908155600155600280546001600160a01b03199081169484169490941790556003805490931691161790556115c8908161011a8239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100ea5756fe60406080815260048036101561001457600080fd5b600091823560e01c8063023245d714610f7b578063150b7a0214610e9b5780631d645b1214610caf57806323e3fbd514610bfe5780632e1a7d4d14610abc5780636215be7714610832578063715018a6146107ea5780637b3c5da7146107c55780638da5cb5b1461079d57806394ab67fe146106ce578063b88a802f14610566578063bd8d99f414610525578063c89d5b8b146104fe578063d7f3387c14610451578063e91a7ca6146102d3578063f2fde38b146102205763f7448a31146100db57600080fd5b3461021c578060031936011261021c576100f3611148565b9060243561010033611248565b61010b811515611305565b60019283548652602091600683528387209360018060a01b039361014e81848760025416878d8d8851968795869485936323b872dd60e01b855233908501611422565b03925af190816101ef575b506101b9576101829482519461016e866113cc565b3386521690840152820152600a83016114b8565b6010810160ff1981541690556011429101558054918183018093116101a657505580f35b634e487b7160e01b845260119052602483fd5b6101c99482519461016e866113cc565b601081018260ff198254161790556011429101558054918183018093116101a657505580f35b61020e90833d8511610215575b61020681836113e7565b81019061140a565b5038610159565b503d6101fc565b8280fd5b50903461021c57602036600319011261021c5761023b611148565b90610244611199565b6001600160a01b039182169283156102815750506000548260018060a01b031982161760005516600080516020611573833981519152600080a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b503461021c576020908160031936011261044d578235906102f333611248565b60019283548652600681528186209260018060a01b036003541687813b1561044a57808361033a938a838951809781958294632142170760e11b8452309033908501611422565b03925af19182610432575b50506103695761018292519161035a8361137a565b33835282015260028301611444565b33875260058252828720805490600160401b82101561041f578261039a836103b5938a6103fb98979601815561146f565b90919082549060031b600019811b9283911b16911916179055565b60ff885460a81c169333895287835280892060ff6103d7825497828916611214565b1660ff1980971617905551916103ec8361137a565b33835282015260028401611444565b8260108301918254161790556011429101558054918183018093116101a657505580f35b634e487b7160e01b895260418852602489fd5b61043b90611351565b610446578738610345565b8780fd5b80fd5b8380fd5b50823461044a576020908160031936011261044a5782906001600160a01b03610478611148565b16815260058352818120908251808584549182815201908194845286842090845b8181106104ea57505050816104af9103826113e7565b83519485948186019282875251809352850193925b8281106104d357505050500390f35b8351855286955093810193928101926001016104c4565b825484529288019260019283019201610499565b83823461052157816003193601126105215760ff6020925460a01c169051908152f35b5080fd5b505034610521576020366003190112610521573560ff811681036105215761054b611199565b815460ff60a01b191660a09190911b60ff60a01b1617815580f35b503461021c578260031936011261021c5761058033611248565b3383526020908282526002818520019182549182156106775760019384548752600683526105d4838389209560018060a01b0360025416898b875180968195829463a9059cbb60e01b84523390840161149d565b03925af1908161065a575b5061060657906101829291549051916105f78361137a565b33835282015260088301611444565b93929161061e9185979697549051916105f78361137a565b601081018260ff1982541617905560114291015580549080820180921161064757839450555580f35b634e487b7160e01b845260118552602484fd5b61067090853d87116102155761020681836113e7565b50386105df565b5162461bcd60e51b815280850191909152602b60248201527f416363756d756c6174656420696e746572657374206d7573742062652067726560448201526a061746572207468616e20360ac1b6064820152608490fd5b503461021c578060031936011261021c576106e7611148565b90602435906106f533611248565b6001928354865260066020528186209260018060a01b0392836003541688813b1561044a57808461073f9387838d885197889586948593632142170760e11b855233908501611422565b03925af19182610785575b50506107755761018293815193610760856113cc565b338552166020840152820152600d83016114b8565b6101c993815193610760856113cc565b61078e90611351565b61079957883861074a565b8880fd5b838234610521578160031936011261052157905490516001600160a01b039091168152602090f35b833461044a57602036600319011261044a576107e76107e2611148565b611248565b80f35b833461044a578060031936011261044a57610803611199565b600080546001600160a01b0319811682556001600160a01b03166000805160206115738339815191528280a380f35b503461021c576020908160031936011261044d5782359061085233611248565b61085d821515611305565b6001928354865260068152818620928660018060a01b0361089d848483600254168b868a518096819582946323b872dd60e01b8452309033908501611422565b03925af19081610a9f575b506108ca5750506101c99251916108be8361137a565b33835282015282611444565b33825287845286858320016108e084825461123b565b9055338252878452426003868420015580600354169085516370a0823160e01b8152338a8201528581602481865afa908115610a95578491610a68575b501590816109ac575b5061095b575b50506101c9923388528683528681892001541561094f575b51916108be8361137a565b4287828a200155610944565b803b156105215781809160248751809481936335313c2160e11b83528d33908401525af180156109a2571561092c5761099390611351565b61099e57863861092c565b8680fd5b85513d84823e3d90fd5b91925050338952878452878488878c200154926002541687519283809263313ce56760e01b82525afa8015610a5e578a90610a22575b60ff915016604d8111610a0f57600a0a90620f42409180830292830403610a0f5790899291101538610926565b634e487b7160e01b8a526011895260248afd5b508481813d8311610a57575b610a3881836113e7565b81010312610a53575160ff81168103610a535760ff906109e2565b8980fd5b503d610a2e565b86513d8c823e3d90fd5b90508581813d8311610a8e575b610a7f81836113e7565b8101031261044d57513861091d565b503d610a75565b87513d86823e3d90fd5b610ab590863d88116102155761020681836113e7565b50386108a8565b503461021c576020908160031936011261044d57823591610adc33611248565b33855283815281852090600382015460058101809111610be9574210610bad57610b07841515611305565b60019384548752600682528387209385610b44848460018060a01b03600254168b8d875180968195829463a9059cbb60e01b84523390840161149d565b03925af19081610b90575b50610b73575061018293505191610b658361137a565b338352820152848301611444565b6101c99401610b838382546111f1565b90555191610b658361137a565b610ba690863d88116102155761020681836113e7565b5038610b4f565b8460649184519162461bcd60e51b83528201526017602482015276151bdad95b9cc8185c99481cdd1a5b1b081b1bd8dad959604a1b6044820152fd5b601186634e487b7160e01b6000525260246000fd5b503461021c57602036600319011261021c578060a093610c1c611148565b8160808451610c2a816113b1565b82815282602082015282868201528260608201520152600180871b031681528360205220815191610c5a836113b1565b60ff825416938484526001830154602085019081526080600285015492848701938452600386015495606088019687520154950194855282519586525160208601525190840152516060830152516080820152f35b50823461044a57602091826003193601126105215780805192610cd184611395565b8151610cdc8161137a565b60008082528682015284528151610cf28161137a565b600080825286820152848601528151610d0a8161137a565b600080825286820152848301528151610d228161137a565b60008082528682015260608501528151610d3b8161137a565b6000808252868201526080850152610d516114f8565b60a0850152610d5e6114f8565b60c08501528060e0850152806101008095015285358152600685522091815194610d8786611395565b610d9084611517565b8652610d9e60028501611517565b9486019485528301610daf90611517565b85830190815290610dc260068501611517565b60608701908152610dd560088601611517565b6080880190815290610de9600a870161153e565b60a0890190815293610dfd600d880161153e565b9560c08a01968752601088015460ff169760e08b0198151589526011015498858b01998a528151809b5190610e319161115e565b51908a01610e3e9161115e565b5160808901610e4c9161115e565b5160c08801610e5a9161115e565b51908601610e679161115e565b516101408501610e7691611176565b516101a08401610e8591611176565b5115156102008301525161022082015261024090f35b50903461021c57608036600319011261021c57610eb6611148565b6001600160a01b039160243583811690819003610f76576001600160401b0391606435919083831161044657366023840112156104465782013592831161099e57366024848401011161099e57916020968160247f1d823cdc8f0514a95b53538df2d2f3deaf98d1c534c6e750daa593173c27f8f097969460a0968a519889971687528b8701526044358a870152608060608701528260808701520185850137828201840152601f01601f19168101030190a151630a85bd0160e11b8152f35b600080fd5b503461021c576020908160031936011261044d57823591610f9b33611248565b338552600581528185208054908185101561111157610fba858261146f565b90549060031b1c94600019928381019081116110fe579061039a610fe1610fef938561146f565b90549060031b1c918461146f565b805480156110eb57820191611004838361146f565b909182549160031b1b191690555560019283548652600682528286209260018060a01b036003541687813b1561044a57836110589289838651809681958294632142170760e11b8452339030908501611422565b03925af190816110d8575b506110885790610182929151916110798361137a565b33835282015260068301611444565b60ff875460a81c163388528684528188209081549060ff82160360ff8111610a0f5760ff1660ff1991821617909155905190926103fb92906110c98361137a565b33835282015260068401611444565b6110e490989198611351565b9638611063565b634e487b7160e01b885260318752602488fd5b634e487b7160e01b895260118852602489fd5b835162461bcd60e51b81528087018490526011602482015270092dcecc2d8d2c8409c8ca840d2dcc8caf607b1b6044820152606490fd5b600435906001600160a01b0382168203610f7657565b80516001600160a01b03168252602090810151910152565b6040809160018060a01b0380825116855260208201511660208501520151910152565b6000546001600160a01b031633036111ad57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b919082039182116111fe57565b634e487b7160e01b600052601160045260246000fd5b9060ff8091169116019060ff82116111fe57565b818102929181159184041417156111fe57565b919082018092116111fe57565b6001600160a01b031660009081526004602052604090206001810154908161126e575050565b600481019182549161128083426111f1565b90620151809283831015611297575b505050505050565b600261016d6112d26112dd936064886112cc980497889260ff6112c58160005460a01c16828c541690611214565b1690611228565b04611228565b04920191825461123b565b90558181029181830414901517156111fe576112f89161123b565b905538808080808061128f565b1561130c57565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b6001600160401b03811161136457604052565b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b0382111761136457604052565b61012081019081106001600160401b0382111761136457604052565b60a081019081106001600160401b0382111761136457604052565b606081019081106001600160401b0382111761136457604052565b601f909101601f19168101906001600160401b0382119082101761136457604052565b90816020910312610f7657518015158103610f765790565b6001600160a01b03918216815291166020820152604081019190915260600190565b815181546001600160a01b0319166001600160a01b0391909116178155602090910151600190910155565b80548210156114875760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b039091168152602081019190915260400190565b815181546001600160a01b039182166001600160a01b03199182161783556020840151600184018054919093169116179055604090910151600290910155565b60405190611505826113cc565b60006040838281528260208201520152565b906040516115248161137a565b82546001600160a01b031681526001909201546020830152565b9060405161154b816113cc565b82546001600160a01b0390811682526001840154166020820152600290920154604083015256fe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220b6376a5e90a0c50872d349e39c524d3b6a658dfe864a9fb1924729027319499964736f6c63430008110033";

type MainContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MainContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MainContract__factory extends ContractFactory {
  constructor(...args: MainContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    tokenErc20: PromiseOrValue<string>,
    tokenErc721: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MainContract> {
    return super.deploy(
      tokenErc20,
      tokenErc721,
      overrides || {}
    ) as Promise<MainContract>;
  }
  override getDeployTransaction(
    tokenErc20: PromiseOrValue<string>,
    tokenErc721: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tokenErc20, tokenErc721, overrides || {});
  }
  override attach(address: string): MainContract {
    return super.attach(address) as MainContract;
  }
  override connect(signer: Signer): MainContract__factory {
    return super.connect(signer) as MainContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MainContractInterface {
    return new utils.Interface(_abi) as MainContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MainContract {
    return new Contract(address, _abi, signerOrProvider) as MainContract;
  }
}
