/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MainContract,
  MainContractInterface,
} from "../../../contracts/MainContract.sol/MainContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenErc20",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenErc721",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "NFTReceived",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "NFTId",
        type: "uint256",
      },
    ],
    name: "depositNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositOf",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "APRIncrement",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "accumulatedInterest",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "depositTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastInterestTime",
            type: "uint256",
          },
        ],
        internalType: "struct MainContract.Deposit",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "depositOfNFT",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAPR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getEventInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "user",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct MainContract.DepositTokenInfo",
            name: "depositToken",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "user",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "NFTId",
                type: "uint256",
              },
            ],
            internalType: "struct MainContract.DepositNFTInfo",
            name: "depositNFT",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "user",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct MainContract.WithdrawERC20Info",
            name: "withdrawERC20",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "user",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "NFTId",
                type: "uint256",
              },
            ],
            internalType: "struct MainContract.WithdrawNFTInfo",
            name: "withdrawNFT",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "user",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct MainContract.ClaimRewardInfo",
            name: "claimReward",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "from",
                type: "address",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
            ],
            internalType: "struct MainContract.TransferERC20Info",
            name: "transferERC20",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "address",
                name: "from",
                type: "address",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "NFTId",
                type: "uint256",
              },
            ],
            internalType: "struct MainContract.TransferNFTInfo",
            name: "transferNFT",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "successful",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct MainContract.EventInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "APR",
        type: "uint8",
      },
    ],
    name: "setAPR",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "updateInterest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "withdrawNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100ea57601f6114e038819003918201601f19168301916001600160401b038311848410176100ef5780849260409485528339810103126100ea57610052602061004b83610105565b9201610105565b906000546040519260018060a01b0391338382167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36001600160a81b0319163360ff60a01b191617600160a31b1760ff60a81b1916600160a91b176000908155600155600280546001600160a01b03199081169484169490941790556003805490931691161790556113c6908161011a8239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100ea5756fe6040608081526004908136101561001557600080fd5b600091823560e01c8063023245d714610dc6578063150b7a0214610ce75780631d645b1214610afb57806323e3fbd514610a495780632e1a7d4d146109055780636215be7714610654578063715018a61461060c5780637b3c5da7146105e75780638da5cb5b146105bf578063b88a802f14610446578063bd8d99f414610405578063c89d5b8b146103de578063d7f3387c14610331578063e91a7ca61461017b5763f2fde38b146100c657600080fd5b34610177576020366003190112610177576100df610f94565b906100e8610fe5565b6001600160a01b039182169283156101255750506000548260018060a01b031982161760005516600080516020611371833981519152600080a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b509034610177576020908160031936011261032d5782359061019c33611094565b60019283548652600681528186209260018060a01b036003541687813b1561032a5780836101e3938a838951809781958294632142170760e11b8452309033908501611260565b03925af19182610312575b505061024957610212925191610203836111b8565b33835282015260028301611282565b6010810160ff19815416905560114291015580549181830180931161023657505580f35b634e487b7160e01b845260119052602483fd5b33875260058252828720805490600160401b8210156102ff578261027a83610295938a6102db9897960181556112ad565b90919082549060031b600019811b9283911b16911916179055565b60ff885460a81c169333895287835280892060ff6102b7825497828916611060565b1660ff1980971617905551916102cc836111b8565b33835282015260028401611282565b82601083019182541617905560114291015580549181830180931161023657505580f35b634e487b7160e01b895260418852602489fd5b61031b9061118f565b6103265787386101ee565b8780fd5b80fd5b8380fd5b82843461032a576020908160031936011261032a5782906001600160a01b03610358610f94565b16815260058352818120908251808584549182815201908194845286842090845b8181106103ca575050508161038f910382611225565b83519485948186019282875251809352850193925b8281106103b357505050500390f35b8351855286955093810193928101926001016103a4565b825484529288019260019283019201610379565b50503461040157816003193601126104015760ff6020925460a01c169051908152f35b5080fd5b838234610401576020366003190112610401573560ff811681036104015761042b610fe5565b815460ff60a01b191660a09190911b60ff60a01b1617815580f35b50903461017757826003193601126101775761046133611094565b3383526020908282526002818520019182549182156105685760019384548752600683526104b5838389209560018060a01b0360025416898b875180968195829463a9059cbb60e01b8452339084016112db565b03925af1908161053b575b506104e757906102129291549051916104d8836111b8565b33835282015260088301611282565b9392916104ff9185979697549051916104d8836111b8565b601081018260ff1982541617905560114291015580549080820180921161052857839450555580f35b634e487b7160e01b845260118552602484fd5b61055a90853d8711610561575b6105528183611225565b810190611248565b50386104c0565b503d610548565b5162461bcd60e51b815280850191909152602b60248201527f416363756d756c6174656420696e746572657374206d7573742062652067726560448201526a061746572207468616e20360ac1b6064820152608490fd5b505034610401578160031936011261040157905490516001600160a01b039091168152602090f35b833461032a57602036600319011261032a57610609610604610f94565b611094565b80f35b833461032a578060031936011261032a57610625610fe5565b600080546001600160a01b0319811682556001600160a01b03166000805160206113718339815191528280a380f35b509034610177576020908160031936011261032d5782359061067533611094565b610680821515611143565b6001928354865260068152818620928660018060a01b036106c0848483600254168b868a518096819582946323b872dd60e01b8452309033908501611260565b03925af190816108e8575b506107135750506106ed9251916106e1836111b8565b33835282015282611282565b601081018260ff1982541617905560114291015580549181830180931161023657505580f35b3382528784528685832001610729848254611087565b9055338252878452426003868420015580600354169085516370a0823160e01b8152338a8201528581602481865afa9081156108de5784916108b1575b501590816107f5575b506107a4575b50506106ed9233885286835286818920015415610798575b51916106e1836111b8565b4287828a20015561078d565b803b156104015781809160248751809481936335313c2160e11b83528d33908401525af180156107eb5715610775576107dc9061118f565b6107e7578638610775565b8680fd5b85513d84823e3d90fd5b91925050338952878452878488878c200154926002541687519283809263313ce56760e01b82525afa80156108a7578a9061086b575b60ff915016604d811161085857600a0a90620f42409180830292830403610858579089929110153861076f565b634e487b7160e01b8a526011895260248afd5b508481813d83116108a0575b6108818183611225565b8101031261089c575160ff8116810361089c5760ff9061082b565b8980fd5b503d610877565b86513d8c823e3d90fd5b90508581813d83116108d7575b6108c88183611225565b8101031261032d575138610766565b503d6108be565b87513d86823e3d90fd5b6108fe90863d8811610561576105528183611225565b50386106cb565b509034610177576020908160031936011261032d5782359161092633611094565b33855283815281852090600382015493600194858101809111610a345742106109f757610954811515611143565b8454875260068252838720938561098e848460018060a01b03600254168b8d875180968195829463a9059cbb60e01b8452339084016112db565b03925af190816109da575b506109bd5750610212935051916109af836111b8565b338352820152848301611282565b6106ed94016109cd83825461103d565b905551916109af836111b8565b6109f090863d8811610561576105528183611225565b5038610999565b835162461bcd60e51b81528087018390526017602482015276151bdad95b9cc8185c99481cdd1a5b1b081b1bd8dad959604a1b6044820152606490fd5b601187634e487b7160e01b6000525260246000fd5b509034610177576020366003190112610177578060a093610a68610f94565b8160808451610a76816111ef565b82815282602082015282868201528260608201520152600180871b031681528360205220815191610aa6836111ef565b60ff825416938484526001830154602085019081526080600285015492848701938452600386015495606088019687520154950194855282519586525160208601525190840152516060830152516080820152f35b50913461032a57602091826003193601126104015780805192610b1d846111d3565b8151610b28816111b8565b60008082528682015284528151610b3e816111b8565b600080825286820152848601528151610b56816111b8565b600080825286820152848301528151610b6e816111b8565b60008082528682015260608501528151610b87816111b8565b6000808252868201526080850152610b9d6112f6565b60a0850152610baa6112f6565b60c08501528060e0850152806101008095015285358152600685522091815194610bd3866111d3565b610bdc84611315565b8652610bea60028501611315565b9486019485528301610bfb90611315565b85830190815290610c0e60068501611315565b60608701908152610c2160088601611315565b6080880190815290610c35600a870161133c565b60a0890190815293610c49600d880161133c565b9560c08a01968752601088015460ff169760e08b0198151589526011015498858b01998a528151809b5190610c7d91610faa565b51908a01610c8a91610faa565b5160808901610c9891610faa565b5160c08801610ca691610faa565b51908601610cb391610faa565b516101408501610cc291610fc2565b516101a08401610cd191610fc2565b5115156102008301525161022082015261024090f35b503461017757608036600319011261017757610d01610f94565b6001600160a01b039160243583811690819003610dc1576001600160401b039160643591908383116103265736602384011215610326578201359283116107e75736602484840101116107e757916020968160247f1d823cdc8f0514a95b53538df2d2f3deaf98d1c534c6e750daa593173c27f8f097969460a0968a519889971687528b8701526044358a870152608060608701528260808701520185850137828201840152601f01601f19168101030190a151630a85bd0160e11b8152f35b600080fd5b509034610177576020908160031936011261032d57823591610de733611094565b3385526005815281852080549081851015610f5d57610e0685826112ad565b90549060031b1c9460001992838101908111610f4a579061027a610e2d610e3b93856112ad565b90549060031b1c91846112ad565b80548015610f3757820191610e5083836112ad565b909182549160031b1b191690555560019283548652600682528286209260018060a01b036003541687813b1561032a5783610ea49289838651809681958294632142170760e11b8452339030908501611260565b03925af19081610f24575b50610ed4579061021292915191610ec5836111b8565b33835282015260068301611282565b60ff875460a81c163388528684528188209081549060ff82160360ff81116108585760ff1660ff1991821617909155905190926102db9290610f15836111b8565b33835282015260068401611282565b610f309098919861118f565b9638610eaf565b634e487b7160e01b885260318752602488fd5b634e487b7160e01b895260118852602489fd5b835162461bcd60e51b81528087018490526011602482015270092dcecc2d8d2c8409c8ca840d2dcc8caf607b1b6044820152606490fd5b600435906001600160a01b0382168203610dc157565b80516001600160a01b03168252602090810151910152565b6040809160018060a01b0380825116855260208201511660208501520151910152565b6000546001600160a01b03163303610ff957565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b9190820391821161104a57565b634e487b7160e01b600052601160045260246000fd5b9060ff8091169116019060ff821161104a57565b8181029291811591840414171561104a57565b9190820180921161104a57565b6001600160a01b03166000908152600460205260409020600181015490816110ba575050565b60048101918254916110cc834261103d565b9160018310156110de575b5050505050565b6002600c61111385606461110d61111e9660ff6111068160005460a01c16828c541690611060565b1690611074565b04611074565b049201918254611087565b90558080046001148115171561104a5761113791611087565b905538808080806110d7565b1561114a57565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b6001600160401b0381116111a257604052565b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b038211176111a257604052565b61012081019081106001600160401b038211176111a257604052565b60a081019081106001600160401b038211176111a257604052565b606081019081106001600160401b038211176111a257604052565b601f909101601f19168101906001600160401b038211908210176111a257604052565b90816020910312610dc157518015158103610dc15790565b6001600160a01b03918216815291166020820152604081019190915260600190565b815181546001600160a01b0319166001600160a01b0391909116178155602090910151600190910155565b80548210156112c55760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b039091168152602081019190915260400190565b604051906113038261120a565b60006040838281528260208201520152565b90604051611322816111b8565b82546001600160a01b031681526001909201546020830152565b906040516113498161120a565b82546001600160a01b0390811682526001840154166020820152600290920154604083015256fe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220a4d955dd0927b72bfa35774388af3ec77f1a90c347ba13789d530d333a255ac864736f6c63430008110033";

type MainContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MainContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MainContract__factory extends ContractFactory {
  constructor(...args: MainContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    tokenErc20: PromiseOrValue<string>,
    tokenErc721: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MainContract> {
    return super.deploy(
      tokenErc20,
      tokenErc721,
      overrides || {}
    ) as Promise<MainContract>;
  }
  override getDeployTransaction(
    tokenErc20: PromiseOrValue<string>,
    tokenErc721: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tokenErc20, tokenErc721, overrides || {});
  }
  override attach(address: string): MainContract {
    return super.attach(address) as MainContract;
  }
  override connect(signer: Signer): MainContract__factory {
    return super.connect(signer) as MainContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MainContractInterface {
    return new utils.Interface(_abi) as MainContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MainContract {
    return new Contract(address, _abi, signerOrProvider) as MainContract;
  }
}
