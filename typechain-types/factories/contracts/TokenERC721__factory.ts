/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TokenERC721,
  TokenERC721Interface,
} from "../../contracts/TokenERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getBalanceNFT",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
        ],
        internalType: "struct TokenERC721.NFTInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234620003635762001640803803806200001d8162000368565b9283398101604082820312620003635781516001600160401b0392908381116200036357826200004f9183016200038e565b906020928382015185811162000363576200006b92016200038e565b9281518181116200034d576000938454916001948584811c9416801562000342575b838510146200032e578190601f94858111620002db575b508390858311600114620002775788926200026b575b5050600019600383901b1c191690851b1785555b8551928311620002575783548481811c911680156200024c575b828210146200023857828111620001f0575b50809183116001146200018a57508394829394926200017e575b5050600019600383901b1c191690821b1790555b60068054336001600160a01b031982168117909255604051926001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361123f9081620004018239f35b01519050388062000114565b90601f198316958486528286209286905b888210620001d85750508385969710620001be575b505050811b01905562000128565b015160001960f88460031b161c19169055388080620001b0565b8087859682949686015181550195019301906200019b565b8486528186208380860160051c8201928487106200022e575b0160051c019085905b82811062000222575050620000fa565b87815501859062000212565b9250819262000209565b634e487b7160e01b86526022600452602486fd5b90607f1690620000e8565b634e487b7160e01b85526041600452602485fd5b015190503880620000ba565b8880528489208894509190601f1984168a5b87828210620002c45750508411620002aa575b505050811b018555620000ce565b015160001960f88460031b161c191690553880806200029c565b8385015186558b9790950194938401930162000289565b9091508780528388208580850160051c82019286861062000324575b918991869594930160051c01915b82811062000315575050620000a4565b8a815585945089910162000305565b92508192620002f7565b634e487b7160e01b87526022600452602487fd5b93607f16936200008d565b634e487b7160e01b600052604160045260246000fd5b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200034d57604052565b919080601f84011215620003635782516001600160401b0381116200034d57602090620003c4601f8201601f1916830162000368565b92818452828287010111620003635760005b818110620003ec57508260009394955001015290565b8581018301518482018401528201620003d656fe6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a7146108c257508063062d49d41461081657806306fdde03146107f8578063081812fc146107d8578063095ea7b31461066b57806323b872dd1461064657806342842e0e146105e85780636352211e146105b75780636a6278421461049e57806370a0823114610471578063715018a6146104265780638da5cb5b146103fd57806395d89b41146103cc578063a22cb46514610301578063b88d4fde1461024b578063c87b56dd146101f1578063e985e9c51461019f5763f2fde38b146100e957600080fd5b3461019b57602036600319011261019b5761010261092e565b9061010b610a5e565b6001600160a01b03918216928315610149575050600680546001600160a01b031981168417909155166000805160206111ca8339815191528380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5050346101ed57806003193601126101ed5760ff816020936101bf61092e565b6101c7610949565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b5080fd5b509190346101ed5760203660031901126101ed5761021a6102156102479435610fba565b610b2d565b81815161022681610a05565b5280519161023383610a05565b82525191829160208352602083019061095f565b0390f35b50903461019b57608036600319011261019b5761026661092e565b9061026f610949565b6064359360443591906001600160401b0386116102fd57366023870112156102fd57850135936102aa6102a186610a43565b94519485610a20565b8484528636602487890101116102fa576020866102f29760246102f79a0183890137860101526102e26102dd8433610df6565b610d1d565b6102ed838383610ebe565b6110f3565b610dd2565b80f35b80fd5b8680fd5b50903461019b578060031936011261019b5761031b61092e565b90602435918215158093036103c8576001600160a01b03169233841461038a5750338452600560205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b6020606492519162461bcd60e51b8352820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152fd5b8480fd5b5050346101ed57816003193601126101ed57610247906103ea610c63565b905191829160208352602083019061095f565b5050346101ed57816003193601126101ed5760065490516001600160a01b039091168152602090f35b83346102fa57806003193601126102fa5761043f610a5e565b600680546001600160a01b0319811690915581906001600160a01b03166000805160206111ca8339815191528280a380f35b5050346101ed5760203660031901126101ed5760209061049761049261092e565b610ab6565b9051908152f35b50903461019b57602036600319011261019b576104b961092e565b600754908251926104c984610a05565b8584526001600160a01b038216908115610575579183809261054c96946104fb6104f56102f298610fba565b1561117e565b6105076104f584610fba565b818a5260036020908152818b2080546001019055838b5260029052892080546001600160a01b03191682179055886000805160206111ea8339815191528180a4610fd7565b6007549060018201809211610562575060075580f35b634e487b7160e01b835260119052602482fd5b5162461bcd60e51b8152602081870181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606490fd5b5091346102fa5760203660031901126102fa57506105d760209235610b74565b90516001600160a01b039091168152f35b509190346101ed576105f93661099f565b83519390929060208501906001600160401b0382118683101761063357916102f79593916102f29593528684526102e26102dd8433610df6565b634e487b7160e01b875260418852602487fd5b83346102fa576102f76106583661099f565b916106666102dd8433610df6565b610ebe565b503461019b578160031936011261019b5761068461092e565b6024359290916001600160a01b039190828061069f87610b74565b1694169380851461078b5780331490811561076c575b501561070457848652602052842080546001600160a01b031916831790556106dc83610b74565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b6020608492519162461bcd60e51b8352820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152fd5b90508652600560205281862033875260205260ff8287205416386106b5565b506020608492519162461bcd60e51b8352820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152fd5b5091346102fa5760203660031901126102fa57506105d760209235610cf6565b5050346101ed57816003193601126101ed57610247906103ea610b9a565b5050346101ed5760203660031901126101ed57906108a49161083661092e565b91818051610843816109d4565b606081526060602082015201526108b761085b610b9a565b9261086d610867610c63565b91610ab6565b9280519461087a866109d4565b8552602085019182528085019384528051958695602087525160606020880152608087019061095f565b915190601f19868403019086015261095f565b905160608301520390f35b9250503461019b57602036600319011261019b573563ffffffff60e01b811680910361019b57602092506380ac58cd60e01b811490811561091d575b811561090c575b5015158152f35b6301ffc9a760e01b14905038610905565b635b5e139f60e01b811491506108fe565b600435906001600160a01b038216820361094457565b600080fd5b602435906001600160a01b038216820361094457565b919082519283825260005b84811061098b575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161096a565b6060906003190112610944576001600160a01b0390600435828116810361094457916024359081168103610944579060443590565b606081019081106001600160401b038211176109ef57604052565b634e487b7160e01b600052604160045260246000fd5b602081019081106001600160401b038211176109ef57604052565b601f909101601f19168101906001600160401b038211908210176109ef57604052565b6001600160401b0381116109ef57601f01601f191660200190565b6006546001600160a01b03163303610a7257565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6001600160a01b03168015610ad657600052600360205260406000205490565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608490fd5b15610b3457565b60405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606490fd5b6000908152600260205260409020546001600160a01b0316610b97811515610b2d565b90565b604051906000805490600182811c90808416938415610c59575b6020948584108114610c455783885287949392918115610c255750600114610be7575b5050610be592500383610a20565b565b600080805285812095935091905b818310610c0d575050610be593508201013880610bd7565b85548884018501529485019487945091830191610bf5565b915050610be594925060ff191682840152151560051b8201013880610bd7565b634e487b7160e01b85526022600452602485fd5b91607f1691610bb4565b60405190600060019081549182811c90808416938415610cec575b6020948584108114610c455783885287949392918115610c255750600114610cae575050610be592500383610a20565b600081815285812095935091905b818310610cd4575050610be593508201013880610bd7565b85548884018501529485019487945091830191610cbc565b91607f1691610c7e565b610d0261021582610fba565b6000908152600460205260409020546001600160a01b031690565b15610d2457565b60405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608490fd5b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b15610dd957565b60405162461bcd60e51b815280610df260048201610d7f565b0390fd5b906001600160a01b038080610e0a84610b74565b16931691838314938415610e3d575b508315610e27575b50505090565b610e3391929350610cf6565b1614388080610e21565b909350600052600560205260406000208260005260205260ff604060002054169238610e19565b15610e6b57565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b90610ee691610ecc84610b74565b6001600160a01b0393918416928492909183168414610e64565b16918215610f695781610f0391610efc86610b74565b1614610e64565b6000805160206111ea833981519152600084815260046020526040812060018060a01b03199081815416905583825260036020526040822060001981540190558482526040822060018154019055858252600260205284604083209182541617905580a4565b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b6000908152600260205260409020546001600160a01b0316151590565b9192600092909190803b156110e957611025946040518092630a85bd0160e11b9485835233600484015287602484015260448301526080606483015281878160209a8b96608483019061095f565b03926001600160a01b03165af18491816110a9575b50611098575050503d600014611090573d61105481610a43565b906110626040519283610a20565b81528091833d92013e5b8051918261108d5760405162461bcd60e51b815280610df260048201610d7f565b01fd5b50606061106c565b6001600160e01b0319161492509050565b9091508581813d83116110e2575b6110c18183610a20565b810103126103c857516001600160e01b0319811681036103c857903861103a565b503d6110b7565b5050915050600190565b9293600093909291803b156111735794849161114d9660405180948193630a85bd0160e11b9788845233600485015260018060a01b0380921660248501526044840152608060648401528260209b8c97608483019061095f565b0393165af18491816110a95750611098575050503d600014611090573d61105481610a43565b505050915050600190565b1561118557565b60405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b6044820152606490fdfe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122049dc4aec458f513ede561aa35a3f02b59d7c220b9b2f1ed570fb3e0d78386d9664736f6c63430008110033";

type TokenERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenERC721__factory extends ContractFactory {
  constructor(...args: TokenERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenERC721> {
    return super.deploy(name, symbol, overrides || {}) as Promise<TokenERC721>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override attach(address: string): TokenERC721 {
    return super.attach(address) as TokenERC721;
  }
  override connect(signer: Signer): TokenERC721__factory {
    return super.connect(signer) as TokenERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenERC721Interface {
    return new utils.Interface(_abi) as TokenERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenERC721 {
    return new Contract(address, _abi, signerOrProvider) as TokenERC721;
  }
}
