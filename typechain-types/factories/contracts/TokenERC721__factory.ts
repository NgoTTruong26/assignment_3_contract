/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  TokenERC721,
  TokenERC721Interface,
} from "../../contracts/TokenERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234620003635762001556803803806200001d8162000368565b9283398101604082820312620003635781516001600160401b0392908381116200036357826200004f9183016200038e565b906020928382015185811162000363576200006b92016200038e565b9281518181116200034d576000938454916001948584811c9416801562000342575b838510146200032e578190601f94858111620002db575b508390858311600114620002775788926200026b575b5050600019600383901b1c191690851b1785555b8551928311620002575783548481811c911680156200024c575b828210146200023857828111620001f0575b50809183116001146200018a57508394829394926200017e575b5050600019600383901b1c191690821b1790555b60068054336001600160a01b031982168117909255604051926001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36111559081620004018239f35b01519050388062000114565b90601f198316958486528286209286905b888210620001d85750508385969710620001be575b505050811b01905562000128565b015160001960f88460031b161c19169055388080620001b0565b8087859682949686015181550195019301906200019b565b8486528186208380860160051c8201928487106200022e575b0160051c019085905b82811062000222575050620000fa565b87815501859062000212565b9250819262000209565b634e487b7160e01b86526022600452602486fd5b90607f1690620000e8565b634e487b7160e01b85526041600452602485fd5b015190503880620000ba565b8880528489208894509190601f1984168a5b87828210620002c45750508411620002aa575b505050811b018555620000ce565b015160001960f88460031b161c191690553880806200029c565b8385015186558b9790950194938401930162000289565b9091508780528388208580850160051c82019286861062000324575b918991869594930160051c01915b82811062000315575050620000a4565b8a815585945089910162000305565b92508192620002f7565b634e487b7160e01b87526022600452602487fd5b93607f16936200008d565b634e487b7160e01b600052604160045260246000fd5b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200034d57604052565b919080601f84011215620003635782516001600160401b0381116200034d57602090620003c4601f8201601f1916830162000368565b92818452828287010111620003635760005b818110620003ec57508260009394955001015290565b8581018301518482018401528201620003d656fe6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a7146109c65750806306fdde0314610919578063081812fc146108f9578063095ea7b31461078c57806323b872dd1461076757806342842e0e146107095780636352211e146106d85780636a627842146105c357806370a082311461052d578063715018a6146104e25780638da5cb5b146104b957806395d89b41146103c1578063a22cb465146102f6578063b88d4fde14610240578063c87b56dd146101e6578063e985e9c5146101945763f2fde38b146100de57600080fd5b34610190576020366003190112610190576100f7610a72565b90610100610b47565b6001600160a01b0391821692831561013e575050600680546001600160a01b031981168417909155166000805160206110e08339815191528380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5050346101e257806003193601126101e25760ff816020936101b4610a72565b6101bc610a8d565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b5080fd5b509190346101e25760203660031901126101e25761020f61020a61023c9435610ed0565b610b9f565b81815161021b81610ad8565b5280519161022883610ad8565b825251918291602083526020830190610a32565b0390f35b5090346101905760803660031901126101905761025b610a72565b90610264610a8d565b6064359360443591906001600160401b0386116102f257366023870112156102f2578501359361029f61029686610b2c565b94519485610b09565b8484528636602487890101116102ef576020866102e79760246102ec9a0183890137860101526102d76102d28433610d0c565b610c33565b6102e2838383610dd4565b611009565b610ce8565b80f35b80fd5b8680fd5b509034610190578060031936011261019057610310610a72565b90602435918215158093036103bd576001600160a01b03169233841461037f5750338452600560205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b6020606492519162461bcd60e51b8352820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152fd5b8480fd5b5091346102ef57806003193601126102ef578151918160019283549384811c918186169586156104af575b602096878510811461049c578899509688969785829a529182600014610475575050600114610438575b50505061023c9291610429910385610b09565b51928284938452830190610a32565b91908693508083528383205b82841061045d575050508201018161042961023c610416565b8054848a018601528895508794909301928101610444565b60ff19168782015293151560051b86019093019350849250610429915061023c9050610416565b634e487b7160e01b835260228a52602483fd5b92607f16926103ec565b5050346101e257816003193601126101e25760065490516001600160a01b039091168152602090f35b83346102ef57806003193601126102ef576104fb610b47565b600680546001600160a01b0319811690915581906001600160a01b03166000805160206110e08339815191528280a380f35b508290346101e25760203660031901126101e2576001600160a01b03610551610a72565b1690811561056e5760208480858581526003845220549051908152f35b608490602085519162461bcd60e51b8352820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152fd5b508290346101e25760203660031901126101e2576105df610a72565b60075490600182018092116106c557816007558451926105fe84610ad8565b8484526001600160a01b0382169081156106825750916102ec9391816102e7948861063161062b84610ed0565b15611094565b61063d61062b84610ed0565b81895260036020908152818a2080546001019055838a5260029052882080546001600160a01b03191682179055876000805160206111008339815191528180a4610eed565b606490602088519162461bcd60e51b8352820152602060248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b634e487b7160e01b845260118352602484fd5b5091346102ef5760203660031901126102ef57506106f860209235610be6565b90516001600160a01b039091168152f35b509190346101e25761071a36610aa3565b83519390929060208501906001600160401b0382118683101761075457916102ec9593916102e79593528684526102d76102d28433610d0c565b634e487b7160e01b875260418852602487fd5b83346102ef576102ec61077936610aa3565b916107876102d28433610d0c565b610dd4565b50346101905781600319360112610190576107a5610a72565b6024359290916001600160a01b03919082806107c087610be6565b169416938085146108ac5780331490811561088d575b501561082557848652602052842080546001600160a01b031916831790556107fd83610be6565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b6020608492519162461bcd60e51b8352820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152fd5b90508652600560205281862033875260205260ff8287205416386107d6565b506020608492519162461bcd60e51b8352820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152fd5b5091346102ef5760203660031901126102ef57506106f860209235610c0c565b5091346102ef57806003193601126102ef5781519181825492600184811c918186169586156109bc575b602096878510811461049c578899509688969785829a52918260001461047557505060011461097f5750505061023c9291610429910385610b09565b91908693508280528383205b8284106109a4575050508201018161042961023c610416565b8054848a01860152889550879490930192810161098b565b92607f1692610943565b92505034610190576020366003190112610190573563ffffffff60e01b811680910361019057602092506380ac58cd60e01b8114908115610a21575b8115610a10575b5015158152f35b6301ffc9a760e01b14905038610a09565b635b5e139f60e01b81149150610a02565b919082519283825260005b848110610a5e575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610a3d565b600435906001600160a01b0382168203610a8857565b600080fd5b602435906001600160a01b0382168203610a8857565b6060906003190112610a88576001600160a01b03906004358281168103610a8857916024359081168103610a88579060443590565b602081019081106001600160401b03821117610af357604052565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b03821190821017610af357604052565b6001600160401b038111610af357601f01601f191660200190565b6006546001600160a01b03163303610b5b57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b15610ba657565b60405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606490fd5b6000908152600260205260409020546001600160a01b0316610c09811515610b9f565b90565b610c1861020a82610ed0565b6000908152600460205260409020546001600160a01b031690565b15610c3a57565b60405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608490fd5b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b15610cef57565b60405162461bcd60e51b815280610d0860048201610c95565b0390fd5b906001600160a01b038080610d2084610be6565b16931691838314938415610d53575b508315610d3d575b50505090565b610d4991929350610c0c565b1614388080610d37565b909350600052600560205260406000208260005260205260ff604060002054169238610d2f565b15610d8157565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b90610dfc91610de284610be6565b6001600160a01b0393918416928492909183168414610d7a565b16918215610e7f5781610e1991610e1286610be6565b1614610d7a565b600080516020611100833981519152600084815260046020526040812060018060a01b03199081815416905583825260036020526040822060001981540190558482526040822060018154019055858252600260205284604083209182541617905580a4565b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b6000908152600260205260409020546001600160a01b0316151590565b9192600092909190803b15610fff57610f3b946040518092630a85bd0160e11b9485835233600484015287602484015260448301526080606483015281878160209a8b966084830190610a32565b03926001600160a01b03165af1849181610fbf575b50610fae575050503d600014610fa6573d610f6a81610b2c565b90610f786040519283610b09565b81528091833d92013e5b80519182610fa35760405162461bcd60e51b815280610d0860048201610c95565b01fd5b506060610f82565b6001600160e01b0319161492509050565b9091508581813d8311610ff8575b610fd78183610b09565b810103126103bd57516001600160e01b0319811681036103bd579038610f50565b503d610fcd565b5050915050600190565b9293600093909291803b15611089579484916110639660405180948193630a85bd0160e11b9788845233600485015260018060a01b0380921660248501526044840152608060648401528260209b8c976084830190610a32565b0393165af1849181610fbf5750610fae575050503d600014610fa6573d610f6a81610b2c565b505050915050600190565b1561109b57565b60405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b6044820152606490fdfe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212203f8295fd8924676aa6fd812f508ebb3fec4371fe0db85ad8d2164f148322cc6a64736f6c63430008110033";

type TokenERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TokenERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TokenERC721__factory extends ContractFactory {
  constructor(...args: TokenERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TokenERC721> {
    return super.deploy(name, symbol, overrides || {}) as Promise<TokenERC721>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override attach(address: string): TokenERC721 {
    return super.attach(address) as TokenERC721;
  }
  override connect(signer: Signer): TokenERC721__factory {
    return super.connect(signer) as TokenERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenERC721Interface {
    return new utils.Interface(_abi) as TokenERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenERC721 {
    return new Contract(address, _abi, signerOrProvider) as TokenERC721;
  }
}
